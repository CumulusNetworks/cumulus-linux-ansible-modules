#!/usr/bin/python


def run_cl_cmd(module, cmd):
    (rc, out, err) = module.run_command(cmd, check_rc=False)
    # trim last line as it is always empty
    ret = out.splitlines()
    return ret


def syseeprom_details(module, facts):
    (rc, out, err) = module.run_command('/usr/cumulus/bin/decode-syseeprom')

    if rc:
        facts['cumulus_syseeprom_facts'] = err
        return

    ret = out.splitlines()
    start_on_next_line = True
    for _line in ret:
        if _line.startswith('---'):
            start_on_next_line = True
            continue
        if start_on_next_line:
            chunk = []
            chunk.append(_line[0:21])
            chunk.append(_line[21:28])
            chunk.append(_line[28:30])
            chunk.append(_line[30:])
            if chunk[0].strip() == 'CRC-32':
                continue
            if chunk[1].strip().startswith('0x'):
                header = chunk[0].strip().replace(' ', '_').lower()
                value = chunk[3].strip()
                facts['cumulus_syseeprom_' + header] = value


def main():
    module = AnsibleModule(argument_spec=dict())
    platform_detect_exec = '/usr/bin/platform-detect'
    results = dict(
        msg='Collected Cumulus Linux specific facts',
        ansible_facts=dict(
            platform_detect_str=run_cl_cmd(module, platform_detect_exec)[0]
        )
    )
    syseeprom_details(module, results.get('ansible_facts'))
    module.exit_json(**results)


# import module snippets
from ansible.module_utils.basic import *
# from ansible.module_utils.urls import *

if __name__ == '__main__':
    main()
